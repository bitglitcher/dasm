//Registers

arg registers
{
	(ax){0x00},
	(bx){0x01},
	(cx){0x02},
	(dx){0x03},
	(ex){0x04},
	(fx){0x05}
}

//Keywords

arg hi_lo{
	(lo){1},
	(hi){2}
}

def load_assisted{

	arg_template{
	(hilo){hi_lo},
	(val){numeric}
	}

	max {
	(val){0xff}
	}

    //C code goes here for the assembler function
	encode {
	"
        //Function arguments
        //BIN_BUFFER* bin_buffer, ARG_TABLE* arg_table, int op
        
        //Append byte to bin_buffer
        append_byte(bin_buffer, 0x45);  
    "
	}


	mnemonic {
	"load"
	}

}

def load{
	arg_template{
	(regs){registers},
	(val){numeric}
	}

	max {
	(regs){7}
	}

	encode {
	"
        //Append byte to bin_buffer
        append_byte(bin_buffer, 0x45); 
    "}

	mnemonic{
	"load"
	}

}

def store{}
def add{}
def sub{}
