//Registers

arg registers
{
	(ax){0x00},
	(bx){0x01},
	(cx){0x02},
	(dx){0x03},
	(ex){0x04},
	(fx){0x05}
}

//Keywords

arg hi_lo{
	(lo){1},
	(hi){2}
}

//Here define all C macros
macros {
"
    #define IOO(byte)
"
}

def mov {

    arg_template{
    (op0){registers},
    (op1){registers, numeric, address}
    }

    max {
    }
    
    encode {
    "
    printf(\"Mov Instruction Detected\n\");
    append_byte(bin_buffer, 0x12);
    "
    }

    mnemonic {
    "mov"
    }
}

def add {

    arg_template{
    (op0){register},
    (op1){registers, numeric}
    }

    max {
    }
    
    encode {
    "
        printf(\"Mov Instruction Detected\n\");
        append_byte(bin_buffer, 0x13);
    "
    }

    mnemonic {
    "add"
    }
}

def jmp {

    arg_template
    {
    (op0){numeric}
    }
    
    max {

    }

    encode {
    "
        append_byte(bin_buffer, arg_table->data[0].value);
    "
    }
    
    mnemonic {
    "jmp"
    }
}
