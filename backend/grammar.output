Grammar

    0 $accept: commands $end

    1 commands: %empty
    2         | commands command

    3 command: def
    4        | arg

    5 identifiers: IDENTIFIER
    6            | identifiers ',' IDENTIFIER

    7 template_def_permissive: IDENTIFIER
    8                        | NUMBER

    9 template_def_permissives: template_def_permissive
   10                         | template_def_permissives ',' template_def_permissive

   11 template_def: %empty
   12             | '(' identifiers ')' '{' template_def_permissives '}'

   13 template_defs: template_def
   14              | template_defs ',' template_def

   15 arg: ARG IDENTIFIER '{' template_defs '}'

   16 arg_template: ARG_TEMPLATE '{' template_defs '}'

   17 assemble: ASSEMBLE '{' STRING '}'

   18 max: MAX '{' template_defs '}'

   19 encode: ENCODE '{' STRING '}'

   20 def_branch: arg
   21           | assemble
   22           | arg_template
   23           | max
   24           | encode

   25 recusive_def_branch: def_branch
   26                    | recusive_def_branch def_branch

   27 $@1: %empty

   28 def: DEF IDENTIFIER $@1 '{' recusive_def_branch '}'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 12
    ')' (41) 12
    ',' (44) 6 10 14
    '{' (123) 12 15 16 17 18 19 28
    '}' (125) 12 15 16 17 18 19 28
    error (256)
    DEF (258) 28
    IDENTIFIER (259) 5 6 7 15 28
    ARG (260) 15
    ENCODE (261) 19
    MAX (262) 18
    ARG_TEMPLATE (263) 16
    ASSEMBLE (264) 17
    NUMBER (265) 8
    STRING (266) 17 19


Nonterminals, with rules where they appear

    $accept (17)
        on left: 0
    commands (18)
        on left: 1 2
        on right: 0 2
    command (19)
        on left: 3 4
        on right: 2
    identifiers (20)
        on left: 5 6
        on right: 6 12
    template_def_permissive (21)
        on left: 7 8
        on right: 9 10
    template_def_permissives (22)
        on left: 9 10
        on right: 10 12
    template_def (23)
        on left: 11 12
        on right: 13 14
    template_defs (24)
        on left: 13 14
        on right: 14 15 16 18
    arg (25)
        on left: 15
        on right: 4 20
    arg_template (26)
        on left: 16
        on right: 22
    assemble (27)
        on left: 17
        on right: 21
    max (28)
        on left: 18
        on right: 23
    encode (29)
        on left: 19
        on right: 24
    def_branch (30)
        on left: 20 21 22 23 24
        on right: 25 26
    recusive_def_branch (31)
        on left: 25 26
        on right: 26 28
    def (32)
        on left: 28
        on right: 3
    $@1 (33)
        on left: 27
        on right: 28


State 0

    0 $accept: . commands $end
    1 commands: . %empty
    2         | . commands command

    $default  reduce using rule 1 (commands)

    commands  go to state 1


State 1

    0 $accept: commands . $end
    2 commands: commands . command
    3 command: . def
    4        | . arg
   15 arg: . ARG IDENTIFIER '{' template_defs '}'
   28 def: . DEF IDENTIFIER $@1 '{' recusive_def_branch '}'

    $end  shift, and go to state 2
    DEF   shift, and go to state 3
    ARG   shift, and go to state 4

    command  go to state 5
    arg      go to state 6
    def      go to state 7


State 2

    0 $accept: commands $end .

    $default  accept


State 3

   28 def: DEF . IDENTIFIER $@1 '{' recusive_def_branch '}'

    IDENTIFIER  shift, and go to state 8


State 4

   15 arg: ARG . IDENTIFIER '{' template_defs '}'

    IDENTIFIER  shift, and go to state 9


State 5

    2 commands: commands command .

    $default  reduce using rule 2 (commands)


State 6

    4 command: arg .

    $default  reduce using rule 4 (command)


State 7

    3 command: def .

    $default  reduce using rule 3 (command)


State 8

   27 $@1: . %empty
   28 def: DEF IDENTIFIER . $@1 '{' recusive_def_branch '}'

    $default  reduce using rule 27 ($@1)

    $@1  go to state 10


State 9

   15 arg: ARG IDENTIFIER . '{' template_defs '}'

    '{'  shift, and go to state 11


State 10

   28 def: DEF IDENTIFIER $@1 . '{' recusive_def_branch '}'

    '{'  shift, and go to state 12


State 11

   11 template_def: . %empty  [',', '}']
   12             | . '(' identifiers ')' '{' template_def_permissives '}'
   13 template_defs: . template_def
   14              | . template_defs ',' template_def
   15 arg: ARG IDENTIFIER '{' . template_defs '}'

    '('  shift, and go to state 13

    $default  reduce using rule 11 (template_def)

    template_def   go to state 14
    template_defs  go to state 15


State 12

   15 arg: . ARG IDENTIFIER '{' template_defs '}'
   16 arg_template: . ARG_TEMPLATE '{' template_defs '}'
   17 assemble: . ASSEMBLE '{' STRING '}'
   18 max: . MAX '{' template_defs '}'
   19 encode: . ENCODE '{' STRING '}'
   20 def_branch: . arg
   21           | . assemble
   22           | . arg_template
   23           | . max
   24           | . encode
   25 recusive_def_branch: . def_branch
   26                    | . recusive_def_branch def_branch
   28 def: DEF IDENTIFIER $@1 '{' . recusive_def_branch '}'

    ARG           shift, and go to state 4
    ENCODE        shift, and go to state 16
    MAX           shift, and go to state 17
    ARG_TEMPLATE  shift, and go to state 18
    ASSEMBLE      shift, and go to state 19

    arg                  go to state 20
    arg_template         go to state 21
    assemble             go to state 22
    max                  go to state 23
    encode               go to state 24
    def_branch           go to state 25
    recusive_def_branch  go to state 26


State 13

    5 identifiers: . IDENTIFIER
    6            | . identifiers ',' IDENTIFIER
   12 template_def: '(' . identifiers ')' '{' template_def_permissives '}'

    IDENTIFIER  shift, and go to state 27

    identifiers  go to state 28


State 14

   13 template_defs: template_def .

    $default  reduce using rule 13 (template_defs)


State 15

   14 template_defs: template_defs . ',' template_def
   15 arg: ARG IDENTIFIER '{' template_defs . '}'

    ','  shift, and go to state 29
    '}'  shift, and go to state 30


State 16

   19 encode: ENCODE . '{' STRING '}'

    '{'  shift, and go to state 31


State 17

   18 max: MAX . '{' template_defs '}'

    '{'  shift, and go to state 32


State 18

   16 arg_template: ARG_TEMPLATE . '{' template_defs '}'

    '{'  shift, and go to state 33


State 19

   17 assemble: ASSEMBLE . '{' STRING '}'

    '{'  shift, and go to state 34


State 20

   20 def_branch: arg .

    $default  reduce using rule 20 (def_branch)


State 21

   22 def_branch: arg_template .

    $default  reduce using rule 22 (def_branch)


State 22

   21 def_branch: assemble .

    $default  reduce using rule 21 (def_branch)


State 23

   23 def_branch: max .

    $default  reduce using rule 23 (def_branch)


State 24

   24 def_branch: encode .

    $default  reduce using rule 24 (def_branch)


State 25

   25 recusive_def_branch: def_branch .

    $default  reduce using rule 25 (recusive_def_branch)


State 26

   15 arg: . ARG IDENTIFIER '{' template_defs '}'
   16 arg_template: . ARG_TEMPLATE '{' template_defs '}'
   17 assemble: . ASSEMBLE '{' STRING '}'
   18 max: . MAX '{' template_defs '}'
   19 encode: . ENCODE '{' STRING '}'
   20 def_branch: . arg
   21           | . assemble
   22           | . arg_template
   23           | . max
   24           | . encode
   26 recusive_def_branch: recusive_def_branch . def_branch
   28 def: DEF IDENTIFIER $@1 '{' recusive_def_branch . '}'

    ARG           shift, and go to state 4
    ENCODE        shift, and go to state 16
    MAX           shift, and go to state 17
    ARG_TEMPLATE  shift, and go to state 18
    ASSEMBLE      shift, and go to state 19
    '}'           shift, and go to state 35

    arg           go to state 20
    arg_template  go to state 21
    assemble      go to state 22
    max           go to state 23
    encode        go to state 24
    def_branch    go to state 36


State 27

    5 identifiers: IDENTIFIER .

    $default  reduce using rule 5 (identifiers)


State 28

    6 identifiers: identifiers . ',' IDENTIFIER
   12 template_def: '(' identifiers . ')' '{' template_def_permissives '}'

    ','  shift, and go to state 37
    ')'  shift, and go to state 38


State 29

   11 template_def: . %empty  [',', '}']
   12             | . '(' identifiers ')' '{' template_def_permissives '}'
   14 template_defs: template_defs ',' . template_def

    '('  shift, and go to state 13

    $default  reduce using rule 11 (template_def)

    template_def  go to state 39


State 30

   15 arg: ARG IDENTIFIER '{' template_defs '}' .

    $default  reduce using rule 15 (arg)


State 31

   19 encode: ENCODE '{' . STRING '}'

    STRING  shift, and go to state 40


State 32

   11 template_def: . %empty  [',', '}']
   12             | . '(' identifiers ')' '{' template_def_permissives '}'
   13 template_defs: . template_def
   14              | . template_defs ',' template_def
   18 max: MAX '{' . template_defs '}'

    '('  shift, and go to state 13

    $default  reduce using rule 11 (template_def)

    template_def   go to state 14
    template_defs  go to state 41


State 33

   11 template_def: . %empty  [',', '}']
   12             | . '(' identifiers ')' '{' template_def_permissives '}'
   13 template_defs: . template_def
   14              | . template_defs ',' template_def
   16 arg_template: ARG_TEMPLATE '{' . template_defs '}'

    '('  shift, and go to state 13

    $default  reduce using rule 11 (template_def)

    template_def   go to state 14
    template_defs  go to state 42


State 34

   17 assemble: ASSEMBLE '{' . STRING '}'

    STRING  shift, and go to state 43


State 35

   28 def: DEF IDENTIFIER $@1 '{' recusive_def_branch '}' .

    $default  reduce using rule 28 (def)


State 36

   26 recusive_def_branch: recusive_def_branch def_branch .

    $default  reduce using rule 26 (recusive_def_branch)


State 37

    6 identifiers: identifiers ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 44


State 38

   12 template_def: '(' identifiers ')' . '{' template_def_permissives '}'

    '{'  shift, and go to state 45


State 39

   14 template_defs: template_defs ',' template_def .

    $default  reduce using rule 14 (template_defs)


State 40

   19 encode: ENCODE '{' STRING . '}'

    '}'  shift, and go to state 46


State 41

   14 template_defs: template_defs . ',' template_def
   18 max: MAX '{' template_defs . '}'

    ','  shift, and go to state 29
    '}'  shift, and go to state 47


State 42

   14 template_defs: template_defs . ',' template_def
   16 arg_template: ARG_TEMPLATE '{' template_defs . '}'

    ','  shift, and go to state 29
    '}'  shift, and go to state 48


State 43

   17 assemble: ASSEMBLE '{' STRING . '}'

    '}'  shift, and go to state 49


State 44

    6 identifiers: identifiers ',' IDENTIFIER .

    $default  reduce using rule 6 (identifiers)


State 45

    7 template_def_permissive: . IDENTIFIER
    8                        | . NUMBER
    9 template_def_permissives: . template_def_permissive
   10                         | . template_def_permissives ',' template_def_permissive
   12 template_def: '(' identifiers ')' '{' . template_def_permissives '}'

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51

    template_def_permissive   go to state 52
    template_def_permissives  go to state 53


State 46

   19 encode: ENCODE '{' STRING '}' .

    $default  reduce using rule 19 (encode)


State 47

   18 max: MAX '{' template_defs '}' .

    $default  reduce using rule 18 (max)


State 48

   16 arg_template: ARG_TEMPLATE '{' template_defs '}' .

    $default  reduce using rule 16 (arg_template)


State 49

   17 assemble: ASSEMBLE '{' STRING '}' .

    $default  reduce using rule 17 (assemble)


State 50

    7 template_def_permissive: IDENTIFIER .

    $default  reduce using rule 7 (template_def_permissive)


State 51

    8 template_def_permissive: NUMBER .

    $default  reduce using rule 8 (template_def_permissive)


State 52

    9 template_def_permissives: template_def_permissive .

    $default  reduce using rule 9 (template_def_permissives)


State 53

   10 template_def_permissives: template_def_permissives . ',' template_def_permissive
   12 template_def: '(' identifiers ')' '{' template_def_permissives . '}'

    ','  shift, and go to state 54
    '}'  shift, and go to state 55


State 54

    7 template_def_permissive: . IDENTIFIER
    8                        | . NUMBER
   10 template_def_permissives: template_def_permissives ',' . template_def_permissive

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51

    template_def_permissive  go to state 56


State 55

   12 template_def: '(' identifiers ')' '{' template_def_permissives '}' .

    $default  reduce using rule 12 (template_def)


State 56

   10 template_def_permissives: template_def_permissives ',' template_def_permissive .

    $default  reduce using rule 10 (template_def_permissives)
