arg registers
{
	(ax){0x00},
	(bx){0x01},
	(cx){0x02},
	(dx){0x03},
	(ex){0x04},
	(fx){0x05}
}

arg hi_lo{
	(lo){1},
	(hi){2}
}

def load_assisted{

	arg_template{
	(hilo){hi_lo},
	(val){numeric},
	(something){numeric},
	(apple){numeric}
	}

	max {
	(val){0xff}
	}

	encode {
	"(hilo, val) ((hilo << 3) | (val << 4))"
	}


	assemble {
	"load %hilo %val\n"
	}

}

def load{}
def store{}
def add{}
def sub{}
